#####################################################################
# 	Macro
#####################################################################
[gcode_macro SET_FILAMENT_SENSOR]
description: Sets the filament sensor on/off and save value to file
rename_existing: SET_FILAMENT_SENSOR_BASE
gcode:
  {% if printer.save_variables.variables.filament_sensor is not defined %}
    {% set filament_sensor = {params.SENSOR|string: params.ENABLE|int} %}
  {% else %}
    {% set filament_sensor = printer.save_variables.variables.filament_sensor %}
    {% set _dummy = filament_sensor.update({params.SENSOR|string: params.ENABLE|int}) %}
  {% endif %}
  SET_FILAMENT_SENSOR_BASE SENSOR={params.SENSOR} ENABLE={params.ENABLE}
  SAVE_VARIABLE VARIABLE=filament_sensor VALUE="{filament_sensor}"

[gcode_macro _RESTORE_FILAMENT_SENSOR]
description: Restore the filament sensor on/off state at klipper start
gcode:
  {% if printer.save_variables.variables.filament_sensor is defined %}
    {% for sensor in printer.save_variables.variables.filament_sensor %}
       SET_FILAMENT_SENSOR_BASE SENSOR={sensor} ENABLE={printer.save_variables.variables.filament_sensor[sensor]}
    {% endfor %}
  {% endif %}
  
[gcode_macro M600]
description: Filament change
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro G29]
gcode:
  BED_MESH_CLEAR
  {% if "xyz" not in printer.toolhead.homed_axes %}
  G28
  {% endif %}
  BED_MESH_CALIBRATE
  G0 X0 Y0 Z10 F6000


[gcode_macro SAVE_STATE_ON_RUNOUT]
description: Saves current heater_bed & extruder temprature along with the current Z axis location when the device runs out of filament
gcode:
  {action_respond_info("RUNOUT: Saving Current Tempratures")}
  {action_call_remote_method("notify", name="pushover_gcode", title="Filament Sensor", message="Filament change needed!")}
  SAVE_VARIABLE VARIABLE=bed_temp VALUE={printer.heater_bed.target}
  SAVE_VARIABLE VARIABLE=ext_temp VALUE={printer.extruder.target}

description: Saves current heater_bed & extruder temprature along with the current Z axis location when the device runs out of filament
gcode:
  {action_respond_info("RUNOUT: Saving Current Tempratures")}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={printer.save_variables.variables.bed_temp}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={printer.save_variables.variables.ext_temp}

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method("spoolman_set_active_spool",spool_id=id)}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method("spoolman_set_active_spool",spool_id=None)}









  